########################################################################################################################
# Happy Hare miscellaneous setup and supporting macros
#
# This set of macros can be user edited but only macro "variables" declared
# in the macro definition like this:
#
#   variable_my_var: value
#
# will be automatically upgraded between releases (a backup of previous config
# files will always be made for your reference)
#
# It is highly recommended that, if you do change the functionality, where possible
# you simply add a call to your macro to make it easy to update replace on upgrade
#
# The companion 'mmu_sequence.cfg', 'mmu_form_tip.cfg' and 'mmu_cut_tip.cfg' files
# contains sketetons of macros that are expected to be modified and will be
# retained on upgrade
#
# Klipper only allows for a single save_variables file so if you already
# have one you will need to merge the two
[save_variables]
filename: {klipper_config_home}/mmu/mmu_vars.cfg


###########################################################################
# NECESSARY KLIPPER OVERRIDES
# These supplemental settings essentially disable klipper's built in
# extrusion limits and is necessary when using an MMU
#
[extruder]
max_extrude_only_distance: 200
max_extrude_cross_section: 50


###########################################################################
# Tool change macros
# This is automatically created on installation but you can increase
# or reduce this list to match your number of tools in operation
#
{tx_macros}


###########################################################################
# Simplified subset of commands just for macro visability in
# Mainsail/Fluidd UI (until custom HH panel is complete!)
# The __ is a trick because it is not displayed by the UI but allows for
# similar names to the real commands defined by the klipper module
#
[gcode_macro MMU__EJECT]
gcode: MMU_EJECT

[gcode_macro MMU__HOME]
gcode:
    {% set tool = params.TOOL|default(0)|int %}
    {% set force_unload = params.FORCE_UNLOAD|default(0)|int %}
    MMU_HOME TOOL={tool} FORCE_UNLOAD={force_unload}

[gcode_macro MMU__STATUS]
gcode: MMU_STATUS

[gcode_macro MMU__MOTORS_OFF]
gcode: MMU_MOTORS_OFF

[gcode_macro MMU__SERVO]
gcode:
    {% set pos = params.POS|default("up")|string %}
    MMU_SERVO POS={pos}

[gcode_macro MMU__SELECT_TOOL]
gcode:
    {% set tool = params.TOOL|default(0)|int %}
    MMU_SELECT TOOL={tool}

[gcode_macro MMU__SELECT_BYPASS]
gcode: MMU_SELECT_BYPASS

[gcode_macro MMU__LOAD_BYPASS]
gcode: MMU_LOAD

[gcode_macro MMU__RECOVER]
gcode: MMU_RECOVER

[gcode_macro MMU__PRELOAD]
gcode:
    {% set gate = params.GATE|default(0)|int %}
    MMU_PRELOAD GATE={gate}

[gcode_macro MMU__CHECK_GATE]
gcode:
    {% set gate = params.GATE|default(-1)|int %}
    {% set tool = params.GATE|default(-1)|int %}
    {% set gates = params.GATE|default('!')|string %}
    {% set tools = params.GATE|default('!')|string %}
    MMU_CHECK_GATE GATE={gate} TOOL={tool} GATES={gates} TOOLS={tools}

#
# Aliases (for backward compatibility) of previously well used commands...
#
[gcode_macro MMU_CHANGE_TOOL_STANDALONE]
description: Convenience macro for inclusion in print_start for initial tool load
gcode:
    MMU_CHANGE_TOOL {rawparams} STANDALONE=1

[gcode_macro MMU_CHECK_GATES]
description: Alias for updated macro name of MMU_CHECK_GATE
gcode:
    MMU_CHECK_GATE {rawparams}

[gcode_macro MMU_REMAP_TTG]
description: Alias for updated macro name of MMU_TTG_MAP
gcode:
    MMU_TTG_MAP {rawparams}

