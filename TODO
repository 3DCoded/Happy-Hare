Installer:

DONE 1. For EASY-BRD, need to change GEAR_UART to share with SEL_UART cannot have two pointing to same pin.
DONE 2. Move copy of config in a differnet way .. copy directory or don't end backup files with ***.cfg
DONE 3. KlipperScreen puse/resume (goes back to printing screen .. @gneu)
DONE 4. KlipperScreen consider different buttons on main panel..
DONE 5. Ut would be nice that when we switch the mmu motors off that the servo goes to move position. It not that easy to move it manually.
WONT DO 6. Augment form_tip_variable to allow for NO TOOLTIP (-1), 0 AUTO, 1 (FORCED)??
DONE 7. Autoconfigure Tx macros

8. Have macro level retry option similar to:
ERCF_UNLOCK
ERCF_EJECT
T1
RESUME

WONT DO FOR NOW 9. Endless spool pushing old filament option

10. Check comments on tool_tip_macro.
Example:
variable_cooling_tube_position should have the comment: Measured from Nozzle to Top of Heater Block
variable_cooling_tube_length should have the comment: Measured from Top of Heater Block to Top of Heatsink

11. Don't trigger 'gate_empty' before double checking if it is really empty!

13. Here are the parameters that would go in install.sh (using "MELLOW_FLY_ERCF" instead of ERB / EASY-BRD  /  etc)
 If it helps to improve HH (and HH2), here's the hardware config for the Mellow FLY ERCF board (supports canbus)  Of note is that the mcu config for this board might be something similar to  canbus_uuid: nnnnnnnnnnn instead of serial: xxx.  (The board can be used in either USB or canbus mode)

PIN[MELLOW_FLY_ERCF,gear_uart_pin]="ercf:gpio9";
PIN[MELLOW_FLY_ERCF,gear_step_pin]="ercf:gpio7";
PIN[MELLOW_FLY_ERCF,gear_dir_pin]="!ercf:gpio8"; 
PIN[MELLOW_FLY_ERCF,gear_enable_pin]="!ercf:gpio6";
PIN[MELLOW_FLY_ERCF,gear_diag_pin]="ercf:gpio23";
PIN[MELLOW_FLY_ERCF,gear_endstop_pin]="ercf:gpio13"; // this is a dummy unused pin because there's no actual endstop pin
PIN[MELLOW_FLY_ERCF,selector_uart_pin]="ercf:gpio0";
PIN[MELLOW_FLY_ERCF,selector_step_pin]="ercf:gpio2";
PIN[MELLOW_FLY_ERCF,selector_dir_pin]="!ercf:gpio1";
PIN[MELLOW_FLY_ERCF,selector_enable_pin]="!ercf:gpio3";
PIN[MELLOW_FLY_ERCF,selector_diag_pin]="^ercf:gpio22";
PIN[MELLOW_FLY_ERCF,selector_endstop_pin]="ercf:gpio20";
PIN[MELLOW_FLY_ERCF,servo_pin]="ercf:gpio21";
PIN[MELLOW_FLY_ERCF,encoder_pin]="ercf:gpio15";

14. Automatically perform gate chech if gate is empty and asked to load it before concluding failure.. Issue on ERCF-Software-V3

15. CHECK_GATES to unload then put back in state it was found. Also add explicit set state for quick manual update

16. DONE Make form tip macro configurable as param.

17. DONE Make form tip variable updates sticky for real routine

18. Test clog

19. Test runout, in print and standalone

20. Test adding of _MMU_PRINT_START with virtual sd card

21. Mimick testing of Octoprint streaming with and without _MMU_PRINT_START

22. Make encoder optional

23. Add back initial bowden pull test .. (note can be endstop test if fitted)... could be module with mode "encoder" or "endstop"

24. gneu feedback on EndlessSpool: (2 ideas and 1 possible bug)
I came across a mistake of mine, that makes me think about a few mods that could improve ES.
Yesterday I was printing something and in the middle of the print I saw that ES was required.
I stated the print with T9. When I noticed that I didn't had enough material to finish the print, I started to set up ES while printing.
I installed a new spool on T2 and modified TTG map so that T2 will be the next ES spool for T9. However I forgot to make T2 available. I could not check the gate because T9 was printing. When the ES was detected, of course he told me that T2 was empty and went to pause. I didn't all that was needed to make T2 working, and finish the print.
> The first mod could be that when you add a tool in the ES mapping, that tool (T2 in my case) is automatically made available.
On the next print, T9 and T2 were still mapped together for ES, so I thought that since it had detected ES on T9 it would start on T2. But he didn't. So I had to pause and load T2 manually.
> The next mod could be that when ES is detected on a gate, that gate is declared empty automatically.
> When the spool detected as empty, the unload could go a bit further than park the filament in the block. It could unload 20mm further to make sure that the gate is empty.
What do you think ? 
moggieuk â€” Today at 7:04 PM
> The first mod could be that when you add a tool in the ES mapping, that tool (T2 in my case) is automatically made available.
I agree that would be sensible thing to do automatically.  Just so you know you can manually set it to "available" with the MMU_GATE_MAP GATE=xx AVAILABLE=1 command, but it should be automatic.
> The next mod could be that when ES is detected on a gate, that gate is declared empty automatically.
This is what it is suppose to do and was sure it did.  Did you do something that could have caused it to be marked available again?  Or maybe the tool-to-gate map started with the wrong gate.  I'll have to look into this one but sounds like a bug.
> When the spool detected as empty, the unload could go a bit further than park the filament in the block. It could unload 20mm further to make sure that the gate is empty.
Can you explain this more? Do you mean the unload of the filament that has run out could go further? If so, then yes, this is a good idea!

25. Need to use ES groups for initial load if desired gate is empty!
I forced T9 empty, hopping that T2 will load and start the print. 
It didn't. It just stop the print. Although T2 and T9 are mapped together for ES.

26. Gate calibration - throw away the first measure unless the gate is buffered for more accurate results

26. selector calibration - need way to calibrate bypass "gate"

27. Make servo movement integration faster with option to pass printtime() to servo move so time is not currenttime to avoid toolhead.wait()

28. DOC:  added WAIT=0|1 to MMU_TEST_MOVE, MMU_TEST_HOMING_MOVE, and equiv STEP moves..
