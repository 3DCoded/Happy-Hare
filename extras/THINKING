# PAUL - EXPERIMENTAL THINKING
#    def cmd_MMU_STEP_LOAD_ENCODER(self, gcmd):
#        self.filament_pos = self._load_encoder()
#    def cmd_MMU_STEP_LOAD_BOWDEN(self, gcmd):
#        move = gcmd.get_float('MOVE', self.calibrated_bowden_length, above=0.)
#        self.filament_pos += self._load_bowden(move)
# MMU_STEP_LOAD_ENCODER
# MMU_STEP_LOAD_BOWDEN <options?> [MOVE=^calibrated_bowden_length]
#
# MMU_STEP_HOMING_MOVE ENDSTOP=collision MOVE=50 MOTOR=gear
# MMU_STEP_HOME MOVE=72 MOTOR=gear+extruder
#  - or -
# MMU_STEP_HOMING_MOVE ENDSTOP=mmu_toolhead MAXMOVE=20 MOTOR=gear+extruder
# MMU_STEP_HOME MOVE=62 MOTOR=gear+extruder
#  - or -
# MMU_STEP_HOMING_MOVE ENDSTOP=mmu_toolhead MAXMOVE=10 MOTOR=gear+extruder
# MMU_STEP_HOMING_MOVE ENDSTOP=mmu_toolhead MAXMOVE=10 MOTOR=extruder
# MMU_STEP_HOME MOVE=62 MOTOR=extruder
#  - or -
# MMU_STEP_HOMING_MOVE ENDSTOP=mmu_extruder_touch MOVE=100 MOTOR=gear+extruder
#
# Hypothetical Tradrack
# MMU_HOMING_MOVE ENDSTOP=gate MOTOR=gear
#  - or -
# MMU_LOAD_GATE
#
# MMU_LOAD_BOWDEN
#
# MMU_STEP_HOMING_MOVE ENDSTOP=pre_extruder MAXMOVE=50 MOTOR=gear
#
# MMU_STEP_HOMING_MOVE ENDSTOP=mmu_toolhead MAXMOVE=20 MOTOR=gear+extruder
# MMU_STEP_HOME MOVE=62 MOTOR=gear+extruder
# 
# UNLOAD:
# <tip forming is automatic>
#   self.filament_pos = self._form_tip_standalone()
# MMU_STEP_HOMING_MOVE ENDSTOP=mmu_toolhead MAXMOVE=-60 MOTOR=extruder+gear
# MMU_STEP_MOVE MOVE=-10 MOTOR=extruder+gear
# MMU_STEP_UNLOAD_BOWDEN <options>  OPTIONAL use, could just use MOVE/HOMING_MOVE
# MMU_STEP_UNLOAD_ENCODER
#
